# .azure-pipelines/azure-pipelines.yml

trigger:
  branches:
    include:
      - main
      - develop

variables:
  - group: Nostel-Secrets
  imageName: $(ACR_NAME).azurecr.io/nostel-backend
  tag: $(Build.BuildId)

stages:
  - stage: BuildAndPush
    displayName: 'Build, Test & Push Docker'
    jobs:
      - job: Build
        displayName: 'Gradle Build & Docker Push'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self
            clean: true

          - task: UseJavaVersion@1
            inputs:
              versionSpec: '21'
              jdkArchitectureOption: 'x64'

          - script: |
              ./gradlew clean build --no-daemon
            displayName: 'Gradle: clean build'
            workingDirectory: $(Build.SourcesDirectory)

          - task: Docker@2
            displayName: 'Login ACR'
            inputs:
              command: login
              containerRegistry: '$(acrServiceConnection)'

          - task: Docker@2
            displayName: 'Docker Build'
            inputs:
              command: build
              Dockerfile: $(Build.SourcesDirectory)/Dockerfile
              tags: |
                $(imageName):$(tag)
            workingDirectory: $(Build.SourcesDirectory)

          - task: Docker@2
            displayName: 'Docker Push'
            inputs:
              command: push
              tags: |
                $(imageName):$(tag)

  - stage: Deploy
    displayName: 'Deploy to Azure Web App'
    dependsOn: BuildAndPush
    jobs:
      - deployment: DeployWebApp
        displayName: 'Desplegar a Web App Container'
        environment: 'production'
        pool:
          vmImage: 'ubuntu-latest'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureCLI@2
                  displayName: 'Configurar Web App con nueva imagen'
                  inputs:
                    azureSubscription: '$(azureServiceConnection)'
                    scriptType: bash
                    scriptLocation: inlineScript
                    inlineScript: |
                      ACR_NAME=$(ACR_NAME)
                      RG_NAME=$(RESOURCE_GROUP)
                      WEBAPP_NAME=$(WEBAPP_NAME)
                      IMAGE_TAG=$(tag)

                      az acr login --name $ACR_NAME

                      az webapp config container set \
                        --name $WEBAPP_NAME \
                        --resource-group $RG_NAME \
                        --docker-custom-image-name "$ACR_NAME.azurecr.io/nostel-backend:$IMAGE_TAG" \
                        --docker-registry-server-url "https://$ACR_NAME.azurecr.io"

                      az webapp restart \
                        --name $WEBAPP_NAME \
                        --resource-group $RG_NAME
